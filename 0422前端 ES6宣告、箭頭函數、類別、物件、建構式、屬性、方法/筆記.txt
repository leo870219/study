let宣告變數，可在宣告時直接指定資料，資料可重複宣告 ex: let x; or let x=10;
const宣告常數，並且必須在宣告時指定資料，資料不能變動 ex:圓周率=3.14159 => const pi=3.14159;

箭頭函式使用=>取代傳統函式function
基本語法:
(參數列表)=>(回傳值) 只有回傳值的功能
(參數列表)=>{函式內部程式} 可在函式內部做出其他功能

匿名函式:沒有名字的函式，通常和別的功能結合在一起使用
基本語法:
()=>{函式內部程式}

預設值設定可直接在參數列表宣告
範例:
let f=()=>(first="Leo",last="Wang",name="first+''+last")

類別:設計圖
物件:根據設計圖製造出來的一個實體
一個類別設計可以製造出無數個物件實體
基本類別設計的關鍵字:class,constructor
產生物件實體的關鍵字:new

定義類別
class 類別名稱{}

建立物件
new 類別名稱()

建構式:建構新物件時被呼叫的函式(若是沒特別寫，JS本身會內建空白建構式)

定義建構式
constructor(參數列表){
    建構式的內部程式
}

屬性:用來描述物件的個別差異

在建構式中建立屬性
constructor(參數列表){
    this.屬性名稱=初始資料;
}

由於建構式式在產生物件的時候呼叫，所以此處this代表所要產生的物件

呼叫物件屬性
物件.屬性名稱

存取物件屬性
物件.屬性名稱=新的資料

方法:用來描述物件可以做的事情 or 與物件綁定的函示(方法其實就是函式，只是綁訂在物件上)
方法的名稱(參數列表){
    內部的程式碼
}

呼叫物件方法
物件.方法名稱(參數資料)

在物件方法中使用的this代表綁定物件